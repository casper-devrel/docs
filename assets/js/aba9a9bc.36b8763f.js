"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9319],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),u=a,f=d["".concat(i,".").concat(u)]||d[u]||m[u]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5551:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={},s="Smart Contracts",c={unversionedId:"concepts/smart-contracts",id:"version-1.5.6/concepts/smart-contracts",title:"Smart Contracts",description:"Smart Contracts in General",source:"@site/versioned_docs/version-1.5.6/concepts/smart-contracts.md",sourceDirName:"concepts",slug:"/concepts/smart-contracts",permalink:"/docs/concepts/smart-contracts",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/dev/source/version-1.5.6/concepts/smart-contracts.md",tags:[],version:"1.5.6",lastUpdatedAt:1719863791,formattedLastUpdatedAt:"Jul 1, 2024",frontMatter:{},sidebar:"concepts",previous:{title:"Global State",permalink:"/docs/concepts/global-state"},next:{title:"Authorization Keys",permalink:"/docs/concepts/list-auth-keys"}},i={},l=[{value:"Smart Contracts in General",id:"smart-contracts-in-general",level:2},{value:"Casper Smart Contracts",id:"casper-smart-contracts",level:2},{value:"Session Code",id:"session-code",level:2},{value:"Further Reading",id:"further-reading",level:3}],p={toc:l},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"smart-contracts"},"Smart Contracts"),(0,a.kt)("h2",{id:"smart-contracts-in-general"},"Smart Contracts in General"),(0,a.kt)("p",null,"A smart contract is a self-executing program that automates the actions required in a digital agreement. Once completed, the transactions are trackable and irreversible. Smart contracts permit trusted transactions and agreements among disparate, anonymous parties without the need for a central authority, legal system, or external enforcement mechanism."),(0,a.kt)("h2",{id:"casper-smart-contracts"},"Casper Smart Contracts"),(0,a.kt)("p",null,"Casper smart contracts can be implemented in any programming language that compiles to ",(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/glossary/W#webassembly"},"Wasm"),", which can be installed and executed on-chain using ",(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/glossary/D#deploy"},"Deploys"),". Most documentation examples and the Casper system contracts are written in Rust. You can find a guide to writing a simple, smart contract in Rust ",(0,a.kt)("a",{parentName:"p",href:"/docs/developers/writing-onchain-code/simple-contract"},"here"),"."),(0,a.kt)("h2",{id:"session-code"},"Session Code"),(0,a.kt)("p",null,"Session code is the simplest logic one can execute on a Casper network. It is essential because it is often used to trigger contract logic stored on-chain. Entry points in a contract provide access to the contract code installed in global state. Either ",(0,a.kt)("a",{parentName:"p",href:"/docs/developers/writing-onchain-code/contract-vs-session#what-is-session-code"},"session code")," or another smart contract may call these entry points. Understand when you would use session code over contract code ",(0,a.kt)("a",{parentName:"p",href:"/docs/developers/writing-onchain-code/contract-vs-session"},"here"),"."),(0,a.kt)("h3",{id:"further-reading"},"Further Reading"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/developers/writing-onchain-code/simple-contract"},"Writing Contracts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/developers/cli/sending-deploys"},"Sending a Deploy")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/developers/cli/installing-contracts"},"Installing Smart Contracts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/developers/writing-onchain-code/calling-contracts"},"Calling Smart Contracts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/developers/cli/calling-contracts"},"Calling Smart Contracts using the Casper Client")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/developers/writing-onchain-code/contract-vs-session"},"Smart Contracts and Session Code"))))}m.isMDXComponent=!0}}]);