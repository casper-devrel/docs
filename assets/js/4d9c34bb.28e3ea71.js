"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5597],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),i=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=i(a),f=n,m=u["".concat(p,".").concat(f)]||u[f]||h[f]||o;return a?r.createElement(m,s(s({ref:t},l),{},{components:a})):r.createElement(m,s({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:n,s[1]=c;for(var i=2;i<o;i++)s[i]=a[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},9799:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var r=a(87462),n=(a(67294),a(3905));const o={},s="A",c={unversionedId:"concepts/glossary/A",id:"version-1.5.6/concepts/glossary/A",title:"A",description:"---",source:"@site/versioned_docs/version-1.5.6/concepts/glossary/A.md",sourceDirName:"concepts/glossary",slug:"/concepts/glossary/A",permalink:"/concepts/glossary/A",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/dev/source/version-1.5.6/concepts/glossary/A.md",tags:[],version:"1.5.6",lastUpdatedAt:1719863791,formattedLastUpdatedAt:"Jul 1, 2024",frontMatter:{},sidebar:"concepts",previous:{title:"Glossary",permalink:"/glossary"},next:{title:"B",permalink:"/concepts/glossary/B"}},p={},i=[{value:"Account",id:"account",level:2},{value:"Account Hash",id:"account-hash",level:2},{value:"AssemblyScript",id:"assemblyscript",level:2},{value:"Auction",id:"auction",level:2},{value:"Auction contract",id:"auction-contract",level:2},{value:"Auction delay",id:"auction-delay",level:2}],l={toc:i},u="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"a"},"A"),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/A"},"A")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/B"},"B")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/C"},"C")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/D"},"D")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/E"},"E")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/F"},"F")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/G"},"G")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/H"},"H")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/I"},"I")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/J"},"J")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/K"},"K")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/L"},"L")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/M"},"M")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/N"},"N")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/O"},"O")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/P"},"P")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/Q"},"Q")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/R"},"R")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/S"},"S")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/T"},"T")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/U"},"U")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/V"},"V")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/W"},"W")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/X"},"X")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/Y"},"Y")," ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/Z"},"Z")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"account"},"Account"),(0,n.kt)("p",null,"An Account is a structure that represents a user on a Casper network. Information on creating an account can be found ",(0,n.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#accounts-head"},"here"),"."),(0,n.kt)("h2",{id:"account-hash"},"Account Hash"),(0,n.kt)("p",null,"The account hash is a 32-byte hash of the public key representing the user account. Information on generating an account hash can be found ",(0,n.kt)("a",{parentName:"p",href:"https://support.casperlabs.io/hc/en-gb/articles/13781616975131-How-do-I-generate-an-account-hash-"},"here"),"."),(0,n.kt)("h2",{id:"assemblyscript"},"AssemblyScript"),(0,n.kt)("p",null,"AssemblyScript is a TypeScript-based programming language (JavaScript with static types) that is optimized for WebAssembly and compiled to WebAssembly using ",(0,n.kt)("em",{parentName:"p"},"asc"),", the reference AssemblyScript compiler. It is developed by the AssemblyScript Project and the AssemblyScript community."),(0,n.kt)("h2",{id:"auction"},"Auction"),(0,n.kt)("p",null,'The auction determines the composition of the validator set for each era of the protocol. It is a "first-price" auction (where winning bids become stakes) with a fixed number of spots chosen to balance security with performance. Because rewards are proportional to the stake, it is expected that this competitive mechanism will provide a powerful impetus for staking as many tokens as possible.'),(0,n.kt)("h2",{id:"auction-contract"},"Auction contract"),(0,n.kt)("p",null,"The auction contract acts as a front-end user interface to the auction by directly accepting bids from validators and delegators. It also contains the logic necessary for carrying out the auction."),(0,n.kt)("h2",{id:"auction-delay"},"Auction delay"),(0,n.kt)("p",null,"The number of full eras that pass between the ",(0,n.kt)("a",{parentName:"p",href:"/concepts/glossary/B#booking-block"},"booking block")," and the era whose validator set it defines. The auction delay is configurable and can be several eras long."))}h.isMDXComponent=!0}}]);