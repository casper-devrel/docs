"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2815],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>u});var a=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=a.createContext({}),i=function(e){var t=a.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},k="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),k=i(o),d=n,u=k["".concat(c,".").concat(d)]||k[d]||h[d]||r;return o?a.createElement(u,s(s({ref:t},p),{},{components:o})):a.createElement(u,s({ref:t},p))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,s=new Array(r);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[k]="string"==typeof e?e:n,s[1]=l;for(var i=2;i<r;i++)s[i]=o[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},74118:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>i});var a=o(87462),n=(o(67294),o(3905));const r={},s="B",l={unversionedId:"concepts/glossary/B",id:"concepts/glossary/B",title:"B",description:"---",source:"@site/source/docs/concepts/glossary/B.md",sourceDirName:"concepts/glossary",slug:"/concepts/glossary/B",permalink:"/next/concepts/glossary/B",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/dev/source/docs/concepts/glossary/B.md",tags:[],version:"current",lastUpdatedAt:1719861245,formattedLastUpdatedAt:"Jul 1, 2024",frontMatter:{},sidebar:"concepts",previous:{title:"A",permalink:"/next/concepts/glossary/A"},next:{title:"C",permalink:"/next/concepts/glossary/C"}},c={},i=[{value:"Blake2b",id:"blake2b",level:2},{value:"Block",id:"block",level:2},{value:"Block creation",id:"block-creation",level:2},{value:"Block finality",id:"block-finality",level:2},{value:"Block gossiping",id:"block-gossiping",level:2},{value:"Block height",id:"block-height",level:2},{value:"Block passing",id:"block-passing",level:2},{value:"Block processing",id:"block-processing",level:2},{value:"Block proposal",id:"block-proposal",level:2},{value:"Block validation",id:"block-validation",level:2},{value:"Blockchain",id:"blockchain",level:2},{value:"Block store",id:"block-store",level:2},{value:"Bond",id:"bond",level:2},{value:"Bonding",id:"bonding",level:2},{value:"Booking block",id:"booking-block",level:2}],p={toc:i},k="wrapper";function h(e){let{components:t,...o}=e;return(0,n.kt)(k,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"b"},"B"),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/A"},"A")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/B"},"B")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/C"},"C")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/D"},"D")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/E"},"E")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/F"},"F")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/G"},"G")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/H"},"H")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/I"},"I")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/J"},"J")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/K"},"K")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/L"},"L")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/M"},"M")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/N"},"N")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/O"},"O")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/P"},"P")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/Q"},"Q")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/R"},"R")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/S"},"S")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/T"},"T")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/U"},"U")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/V"},"V")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/W"},"W")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/X"},"X")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/Y"},"Y")," ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/Z"},"Z")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"blake2b"},"Blake2b"),(0,n.kt)("p",null,"A function used within the Casper platform to create cryptographic ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/H#hash"},"hashes"),". More information can be found ",(0,n.kt)("a",{parentName:"p",href:"https://www.blake2.net/"},"here"),"."),(0,n.kt)("h2",{id:"block"},"Block"),(0,n.kt)("p",null,"Used in two contexts:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"A data structure containing a collection of transactions. Blocks form the primary structure of the blockchain."),(0,n.kt)("li",{parentName:"ol"},"A message that is exchanged between nodes containing the data structure as explained in (1).")),(0,n.kt)("p",null,"Each block has a globally unique ID, achieved by hashing the contents of the block."),(0,n.kt)("p",null,"Each block points to its parent. An exception is the first block, which has no parent."),(0,n.kt)("h2",{id:"block-creation"},"Block creation"),(0,n.kt)("p",null,"Block creation means computing the transaction results and collecting the results into a block. We follow a process called ",(0,n.kt)("em",{parentName:"p"},"execution after consensus"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/B#block-proposal"},"block proposal")," happens first, and the proposed ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/P#proto-block"},"proto block")," contains a set of transactions that have not been executed yet."),(0,n.kt)("p",null,"Only after consensus on a ",(0,n.kt)("em",{parentName:"p"},"proto block")," has been reached, the transactions are executed. The resulting new global state ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/R#root-hash"},"root hash")," is put into an actual block, together with the executed transactions."),(0,n.kt)("p",null,"Note that only validators can create valid blocks."),(0,n.kt)("h2",{id:"block-finality"},"Block finality"),(0,n.kt)("p",null,'A block is "finalized" if validators with more than two-thirds of the total network weight agree on adding it to the blockchain.'),(0,n.kt)("p",null,"For an observer to see a conflicting block as finalized, several validators whose total weight exceeds one-third of the total network weight would have to collude and show different information in a way that would ultimately be detected and punished (see ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/E#eviction-eviction"},"eviction"),")."),(0,n.kt)("h2",{id:"block-gossiping"},"Block gossiping"),(0,n.kt)("p",null,"Block gossiping occurs when a message containing a block is sent to one or more nodes on the network. In other words, block gossiping is sending a block validated by the current node but created by another node. The terms ",(0,n.kt)("em",{parentName:"p"},"block gossiping")," and ",(0,n.kt)("a",{parentName:"p",href:"#block-passing"},"block passing")," are interchangeable."),(0,n.kt)("h2",{id:"block-height"},"Block height"),(0,n.kt)("p",null,"Block height is an identifier for a given block based on the number of blocks completed prior to that block."),(0,n.kt)("h2",{id:"block-passing"},"Block passing"),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"#block-gossiping"},"block gossiping"),"."),(0,n.kt)("h2",{id:"block-processing"},"Block processing"),(0,n.kt)("p",null,"Block processing consists of running the transactions in a block received from another node to determine updates to the global state. Note that this is an essential part of ",(0,n.kt)("a",{parentName:"p",href:"#block-validation"},"validating blocks"),"."),(0,n.kt)("h2",{id:"block-proposal"},"Block proposal"),(0,n.kt)("p",null,"Sending a (newly) created block to the other nodes on the network for potential inclusion in the blockchain. Note that this term applies to NEW blocks only."),(0,n.kt)("h2",{id:"block-validation"},"Block validation"),(0,n.kt)("p",null,"The process of determining the validity of a block obtained from another node on the network."),(0,n.kt)("h2",{id:"blockchain"},"Blockchain"),(0,n.kt)("p",null,"Blockchain is a P2P network where the collection of nodes (",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/V#validator"},"validators"),") concurrently updates a decentralized, shared database. They do this collectively, building an ever-growing chain of ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/T#transaction"},"transactions"),". For performance reasons, transactions are bundled in ",(0,n.kt)("a",{parentName:"p",href:"#block"},"blocks"),". According to a particular cooperation protocol (consensus protocol), the collection of ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/N#node"},"nodes")," connected via a P2P network cooperate to maintain this shared database as a single source of truth. The database's current state is called the ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/G#global-state"},"global state")," and has a sizeable map-like collection."),(0,n.kt)("h2",{id:"block-store"},"Block store"),(0,n.kt)("p",null,"The layer of the node software responsible for storing blocks. This layer is persisted and can be used to allow a node to recover its state after a crash."),(0,n.kt)("h2",{id:"bond"},"Bond"),(0,n.kt)("p",null,"The amount of money (in crypto-currency) that is allocated by a node in order to participate in ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/C#consensus"},"consensus")," (and to be a ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/V#validator"},"validator"),")."),(0,n.kt)("h2",{id:"bonding"},"Bonding"),(0,n.kt)("p",null,"Depositing money in the ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/A#auction-contract"},"auction contract")," and try to become a ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/S#staker"},"staker"),". The bonding request is a transaction that transfers tokens to the auction contract. In the next ",(0,n.kt)("a",{parentName:"p",href:"#booking-block"},"booking block"),", a new set of validators is determined, with weights according to their deposits. This new set becomes active in the era(s) using that booking block."),(0,n.kt)("h2",{id:"booking-block"},"Booking block"),(0,n.kt)("p",null,"The booking block for an era is the block that determines the era's validator set. In it, the ",(0,n.kt)("a",{parentName:"p",href:"/next/concepts/glossary/A#auction-contract"},"auction contract")," selects the highest bidders to be the future era's validators. There is a configurable delay, the ",(0,n.kt)("em",{parentName:"p"},"auction_delay"),", which is the number of eras between the booking block and the era to which it applies. The booking block is always a switch block, so the booking block for era ",(0,n.kt)("em",{parentName:"p"},"N + auction_delay + 1")," is the last block of era ",(0,n.kt)("em",{parentName:"p"},"N"),"."))}h.isMDXComponent=!0}}]);