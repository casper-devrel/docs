"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4441],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,h=u["".concat(l,".").concat(f)]||u[f]||d[f]||r;return n?o.createElement(h,s(s({ref:t},p),{},{components:n})):o.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},28756:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));const r={},s="Estimating Gas Costs with Speculative Execution",i={unversionedId:"developers/dapps/speculative-exec",id:"version-1.5.6/developers/dapps/speculative-exec",title:"Estimating Gas Costs with Speculative Execution",description:"Version 1.5 of the Casper Node includes a new JSON RPC endpoint called speculativeexec. This endpoint allows developers to send a Deploy to a single node, which will execute the Deploy without committing the results to global state and, therefore, not incurring the associated costs. Observing the execution results of the Deploy gives a rough estimate of the potential cost for sending the Deploy without speculative execution.",source:"@site/versioned_docs/version-1.5.6/developers/dapps/speculative-exec.md",sourceDirName:"developers/dapps",slug:"/developers/dapps/speculative-exec",permalink:"/docs/developers/dapps/speculative-exec",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/dev/source/version-1.5.6/developers/dapps/speculative-exec.md",tags:[],version:"1.5.6",lastUpdatedAt:1719863791,formattedLastUpdatedAt:"Jul 1, 2024",frontMatter:{},sidebar:"developers",previous:{title:"Signing Deploys",permalink:"/docs/developers/dapps/signing-a-deploy"},next:{title:"Local Network Setup",permalink:"/docs/developers/dapps/setup-nctl"}},l={},c=[{value:"Sending a Speculative Execution Deploy using the Rust CLI Casper Client",id:"sending-a-speculative-execution-deploy-using-the-rust-cli-casper-client",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"estimating-gas-costs-with-speculative-execution"},"Estimating Gas Costs with Speculative Execution"),(0,a.kt)("p",null,"Version 1.5 of the Casper Node includes a new JSON RPC endpoint called ",(0,a.kt)("a",{parentName:"p",href:"/docs/developers/json-rpc/json-rpc-transactional#speculative_exec-speculative_exec"},(0,a.kt)("inlineCode",{parentName:"a"},"speculative_exec")),". This endpoint allows developers to send a ",(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/glossary/D#deploy-deploy"},"Deploy")," to a single node, which will execute the Deploy without committing the results to global state and, therefore, not incurring the associated costs. Observing the execution results of the Deploy gives a rough estimate of the potential cost for sending the Deploy without speculative execution."),(0,a.kt)("p",null,"In addition to the Deploy in question, ",(0,a.kt)("inlineCode",{parentName:"p"},"speculative_exec")," also accepts a ","[",(0,a.kt)("inlineCode",{parentName:"p"},"block_identifier"),"]"," for a specific block height or hash to speculate on. If you do not provide a block identifier, the Deploy will be executed on the most recent block."),(0,a.kt)("h2",{id:"sending-a-speculative-execution-deploy-using-the-rust-cli-casper-client"},"Sending a Speculative Execution Deploy using the Rust CLI Casper Client"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/developers/cli/sending-deploys"},"Rust CLI Casper client")," includes a ",(0,a.kt)("inlineCode",{parentName:"p"},"speculative-exec")," option that will flag a normal ",(0,a.kt)("inlineCode",{parentName:"p"},"put-deploy")," for execution but not commitment to global state. The following command shows an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\ncasper client put-deploy /\n--node-address <HOST:PORT> /\n--chain-name <CHAIN_NAME> /\n--secret-key <PATH> /\n--session-path <PATH>  /\n--payment-amount <PAYMENT_AMOUNT_IN_MOTES>\n--speculative-exec <BLOCK HEIGHT OR HASH>\n\n")),(0,a.kt)("p",null,"You should receive ",(0,a.kt)("inlineCode",{parentName:"p"},"execution_result"),"s that show a ",(0,a.kt)("inlineCode",{parentName:"p"},"cost"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "jsonrpc": "2.0",\n  "id": -4571113357017152230,\n  "result": {\n    "api_version": "1.0.0",\n    "block_hash": "6ca035b08de092e7f5e8fff771b880c5b4d7463a8f7a9b108888aaad958e5b0f",\n    "execution_result": {\n      "Success": {\n        "effect": {\n          <Deploy effects removed for conciseness.>\n        },\n        "transfers": [],\n        "cost": "87300473670"\n      }\n    }\n  }\n}\n\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Cost estimates acquired through ",(0,a.kt)("inlineCode",{parentName:"p"},"speculative_exec")," may vary from the cost of sending the same Deploy to a Casper network. Speculative execution is a tool to help narrow down the potential cost of sending a Deploy, but many factors can cause the actual cost to vary.")))}d.isMDXComponent=!0}}]);